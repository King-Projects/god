#!/system/bin/sh
# KTSR™ by pedro (pedrozzz0 @ GitHub)
# Thanks: tytydraco @ Github
# If you wanna use it as part of your project, please maintain the credits to it respective's author(s).

[[ "$1" == "--debug" ]] || [[ "$1" == "-d" ]] && set -x

modpath="/data/adb/modules/GOD"
glog="/data/media/0/ktsr/game_opt.log"
cpid="/data/media/0/ktsr/pid"

notif_start() { su -lp 2000 -c "cmd notification post -S bigtext -t 'GOD is executing' tag 'Optimizing $pid...'" >/dev/null 2>&1; }

notif_end() { su -lp 2000 -c "cmd notification post -S bigtext -t 'GOD is executing' tag 'Optimizing done!'" >/dev/null 2>&1; }

log_g() {
	echo "[$(date +%T)]: [*] $1" >>"$glog"
}

log_i() { echo "$1" >"$glog"; }

# $1:task_name $2:cgroup_name $3:"cpuset"/"stune"
change_task_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			echo "$temp_tid" >"/dev/$3/$2/tasks"
		done
	done
}

# $1:process_name $2:cgroup_name $3:"cpuset"/"stune"
change_proc_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		comm="$(cat "/proc/$temp_pid/comm")"
		echo "$temp_pid" >"/dev/$3/$2/cgroup.procs"
	done
}

# $1:task_name $2:thread_name $3:cgroup_name $4:"cpuset"/"stune"
change_thread_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && echo "$temp_tid" >"/dev/$4/$3/tasks"
		done
	done
}

# $1:task_name $2:cgroup_name $3:"cpuset"/"stune"
change_main_thread_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		comm="$(cat "/proc/$temp_pid/comm")"
		echo "$temp_pid" >"/dev/$3/$2/tasks"
	done
}

# $1:task_name $2:hex_mask(0x00000003 is CPU0 and CPU1)
change_task_affinity() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			taskset -p "$2" "$temp_tid" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:thread_name $3:hex_mask(0x00000003 is CPU0 and CPU1)
change_thread_affinity() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && taskset -p "$3" "$temp_tid" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:nice(relative to 120)
change_task_nice() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			renice -n +40 -p "$temp_tid"
			renice -n -19 -p "$temp_tid"
			renice -n "$2" -p "$temp_tid"
		done
	done
}

# $1:task_name $2:thread_name $3:nice(relative to 120)
change_thread_nice() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && {
				renice -n +40 -p "$temp_tid"
				renice -n -19 -p "$temp_tid"
				renice -n "$3" -p "$temp_tid"
			}
		done
	done
}

# $1:task_name $2:priority(99-x, 1<=x<=99) (SCHED_RR)
change_task_rt() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			chrt -p "$temp_tid" "$2" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:priority(99-x, 1<=x<=99) (SCHED_FIFO)
change_task_rt_ff() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			chrt -f -p "$temp_tid" "$2" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:thread_name $3:priority(99-x, 1<=x<=99)
change_thread_rt() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && chrt -p "$3" "$temp_tid" >>"$bbn_log"
		done
	done
}

unpin_thread() { change_thread_cgroup "$1" "$2" "" "cpuset"; }

# 0-3
pin_thread_on_pwr() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "0f"
}

# 0-6
pin_thread_on_mid() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "7f"
}

# 4-7
pin_thread_on_perf() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "f0"
}

# 0-7
pin_thread_on_all() {
	unpin_proc "$1"
	change_task_affinity "$1" "ff"
}

# $1:task_name $2:thread_name $3:hex_mask
pin_thread_on_custom() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "$3"
}

# $1:task_name
unpin_proc() { change_task_cgroup "$1" "" "cpuset"; }

# 0-3
pin_proc_on_pwr() {
	unpin_proc "$1"
	change_task_affinity "$1" "0f"
}

# 0-6
pin_proc_on_mid() {
	unpin_proc "$1"
	change_task_affinity "$1" "7f"
}

# 4-7
pin_proc_on_perf() {
	unpin_proc "$1"
	change_task_affinity "$1" "f0"
}

# 0-7
pin_proc_on_all() {
	unpin_proc "$1"
	change_task_affinity "$1" "ff"
}

# $1:task_name $2:hex_mask
pin_proc_on_custom() {
	unpin_proc "$1"
	change_task_affinity "$1" "$2"
}

rebuild_ps_cache() { ps_ret="$(ps -Ao pid,args)"; }

gameopt_apply() {
	rebuild_ps_cache
	change_thread_affinity "dts.freefire|league.wildrift|ncent.game.kwgt|tencent.lolm|league.wildrift|cent.tmgp.sgame|obile.legends|ncent.tmgp.cf|cent.tmgp.cod|o.GenshinImpact|game.allstar.eu|.game.kgth|lofduty.shooter|lebolt.standoff|flightsimulator|es.deadtrigger2|.carxtech.rally|DriftRacing|omin.protectors|om.sozap.badmen|erdog.tacticool|.netease.ddsfna|cade.next.mrglo|c.project_drift|headedshark.tco|amisu.driftmax2|.assolutoracing|garena.game.cod|ki.shadowfight3" "Apollo-Source|Apollo-File|UnityMain|UnityGfxDeviceW|mali-cmar-backe" "f0"
	change_thread_affinity "dts.freefire|league.wildrift|ncent.game.kwgt|tencent.lolm|league.wildrift|cent.tmgp.sgame|obile.legends|ncent.tmgp.cf|cent.tmgp.cod|o.GenshinImpact|game.allstar.eu|.game.kgth|lofduty.shooter|lebolt.standoff|flightsimulator|es.deadtrigger2|.carxtech.rally|DriftRacing|omin.protectors|om.sozap.badmen|erdog.tacticool|.netease.ddsfna|cade.next.mrglo|c.project_drift|headedshark.tco|amisu.driftmax2|.assolutoracing|garena.game.cod|ki.shadowfight3" "UnityPreload|NativeThread|Thread-|UnityMultiRende|AsyncReadManage|UnityChoreograp|Worker Thread" "7f"
	change_thread_affinity "dts.freefire|league.wildrift|ncent.game.kwgt|tencent.lolm|league.wildrift|cent.tmgp.sgame|obile.legends|ncent.tmgp.cf|cent.tmgp.cod|o.GenshinImpact|game.allstar.eu|.game.kgth|lofduty.shooter|lebolt.standoff|cell.brawlstars|touchgames.dls|flightsimulator|ent.criticalops|td.modernstrike|es.deadtrigger2|.carxtech.rally|DriftRacing|omin.protectors|om.sozap.badmen|erdog.tacticool|.netease.ddsfna|cade.next.mrglo|c.project_drift|headedshark.tco|amisu.driftmax2|nt.tmgp.pubgmhd|com.tencent.ig|.netease.jddsaef|m.netease.g93na|netease.g93natw|egendsmobilefps|.legendsmobile|om.pubg.imobile|netease.mrzhna|hotta.|dw.h5yvzr.yt|n.c1game.naslim|.assolutoracing|garena.game.cod|squareenix.lis|walkingdead|ki.shadowfight3" "MIHOYO_NETWORK|tp_schedule|GVoice|FMOD mixer|FMOD stream|ff_read" "0f"
	change_thread_affinity "nt.tmgp.pubgmhd|com.tencent.ig|.netease.jddsaef|m.netease.g93na|netease.g93natw|egendsmobilefps|.legendsmobile|om.pubg.imobile|netease.mrzhna|hotta.|dw.h5yvzr.yt|m.roblox.client|cell.brawlstars|touchgames.dls|ent.criticalops|td.modernstrike|n.c1game.naslim|squareenix.lis|walkingdead" "Thread-|GLThread|RenderThread|mali-cmar-backe" "f0"
	change_thread_affinity "nt.tmgp.pubgmhd|com.tencent.ig|.netease.jddsaef|m.netease.g93na|netease.g93natw|egendsmobilefps|.legendsmobile|om.pubg.imobile|netease.mrzhna|hotta.|dw.h5yvzr.yt|m.roblox.client|cell.brawlstars|touchgames.dls|ent.criticalops|td.modernstrike|n.c1game.naslim|squareenix.lis|walkingdead" "NativeThread|SDLThread|RHIThread|TaskGraphNP|MainThread-UE4" "7f"
}

log_i "[*] Game Optimization Daemon - Improving your experience™
Version: 0.8-r1

[$(date +%T)] [*] Game Optimization Logging started

[$(date +%T)] [*] Game Optimization Daemon enables you to get the best performance out of your favorite games.
"

echo "" >"$cpid"
(
	while true; do
		pid="$(pgrep -f 'dts.freefire|squareenix.lis|ki.shadowfight3|walkingdead|garena.game.codm|headedshark.tco|amisu.driftmax2|.assolutoracing|n.c1game.naslim|td.modernstrike|es.deadtrigger2|cade.next.mrglo|.netease.ddsfna|.carxtech.rally|DriftRacing|omin.protectors|om.sozap.badmen|erdog.tacticool|touchgames.dls|ent.criticalops|flightsimulator|league.wildrift|ncent.game.kwgt|tencent.lolm|league.wildrift|cent.tmgp.sgame|obile.legends|ncent.tmgp.cf|cent.tmgp.cod|o.GenshinImpact|game.allstar.eu|.game.kgth|lofduty.shooter|lebolt.standoff|nt.tmgp.pubgmhd|com.tencent.ig|.netease.jddsaef|m.netease.g93na|netease.g93natw|egendsmobilefps|.legendsmobile|om.pubg.imobile|netease.mrzhna|hotta.|dw.h5yvzr.yt|m.roblox.client|cell.brawlstars')"
		[[ ! "$pid" ]] && sleep 2
		[[ "$pid" != "$(grep -E '[0-9]' "$cpid" | tail -1)" ]] && [[ ! "$pid" == "" ]] || [[ "$(cat "/proc/$pid/oom_score_adj")" == "0" ]] && echo "$pid" >>"$cpid" && {
			game="$(cat /proc/"$pid"/comm)"
			log_g "$game found, optimizing..."
			echo "" >>"$glog"
			gameopt_apply
			log_g "Optimization done"
			echo "" >>"$glog"
		} || continue
		sleep 120
	done
) &
